# Default values for ssu-mgmt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
managedByHelm: true
environment: "develop"

image:
  repository: dfdsdk/ssu-k8s
  pullPolicy: Always
  tag: "latest"

app:
  config:
    confSecretRef: ssu-k8s
  environment:
    - name: SSU_K8S_LOG_LEVEL
      value: info
    - name: SSU_K8S_KUBERNETES_CLUSTERNAME
      value: replaceme
    - name: SSU_K8S_GIT_BRANCH
      value: main
    - name: SSU__MESSAGING__GROUP_ID
      value: cloudengineering.ssu-k8s
    - name: SSU_K8S_GIT_REMOTEREPOURI
      value: ""
    - name: SSU_K8S_GIT_TEMPORARYREPOPATH
      value: ""
    - name: SSU_K8S_ENABLE_OPERATOR
      value: "true"
    - name: SSU_K8S_ENABLE_MESSAGING
      value: "true"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  awsRoleArn: ""
  # Annotations to add to the service account
  annotations:
    eks.amazonaws.com/sts-regional-endpoints: "true"
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  metricsPort: 8888
  scrapeMetrics: true

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  match: Host(`localhost`)
  matches:
    - name: ssu-mgmt
      match: Host(`localhost`)
  middlewares: []
  services: []
  routes: []
    # - kind: Rule
    #   match: Host(`localhost`)
    #   priority: 90
    #   middlewares: []
    #   services:
    #     - kind: Service
    #       name: ssu-mgmt
    #       namespace: selfservice
    #       port: external

resources:
  requests:
    memory: "100Mi"
    cpu: "100m"
  limits:
    memory: "1200Mi"
    cpu: "3000m"


nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: {}